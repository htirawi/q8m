{
  "permissions": {
    "allow": [
      "Bash(tree:*)",
      "Bash(for:*)",
      "Bash(do sed -i '' 's/^interface props {/interface Props {/' \"$file\")",
      "Bash(done)",
      "Bash(find:*)",
      "Bash({} ;)",
      "Bash(pnpm test:*)",
      "Bash(pnpm vitest run:*)",
      "Bash(npm test:*)",
      "Bash(npx tsx:*)",
      "Bash(node:*)",
      "Bash(pgrep:*)",
      "Bash(brew services start:*)",
      "Bash(mongod:*)",
      "Bash(chmod:*)",
      "Bash(./start-mongodb.sh:*)",
      "Bash(lsof:*)",
      "Read(//private/tmp/**)",
      "Bash(pnpm dev:*)",
      "Bash(tsx watch:*)",
      "Bash(pnpm install:*)",
      "Bash(pnpm add:*)",
      "Bash(curl:*)",
      "Bash(brew services:*)",
      "Bash(mongosh:*)",
      "Bash(pnpm remove:*)",
      "Bash(pnpm --filter q8m-server add @paypal/checkout-server-sdk)",
      "Read(//Users/htirawi/Documents/Screenshots/**)",
      "Bash(pnpm audit:*)",
      "Bash(pnpm test:coverage:*)",
      "Bash(mkdir:*)",
      "Bash(pnpm run:*)",
      "Bash(cat:*)",
      "Bash(pnpm lint:*)",
      "Bash(do)",
      "Bash(pnpm typecheck:*)",
      "Bash(cut:*)",
      "Bash(pnpm build:*)",
      "Bash(pnpm lint:fix:*)",
      "Bash(eslint:*)",
      "Bash(pnpm eslint:*)",
      "Bash(awk:*)",
      "WebFetch(domain:algo.monster)",
      "Bash(xargs:*)",
      "Bash(npm run lint:*)",
      "Bash(npm run type-check:*)",
      "Bash(pnpm --filter q8m-client typecheck:*)",
      "Bash(pnpm --filter q8m-client lint)",
      "Bash(pkill:*)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(pnpm logs:*)",
      "Bash(kill:*)",
      "Bash(pnpm test:unit:*)",
      "Read(//Users/htirawi/Desktop/**)",
      "Bash(echo:*)",
      "Bash(pnpm test:e2e:*)",
      "Bash(if [ -f \"$file\" ])",
      "Bash(then)",
      "Bash(fi)",
      "Read(//var/folders/3j/l54px0hn1c72m5bydzp8sqv80000gn/T/TemporaryItems/NSIRD_screencaptureui_Ah1myq/**)",
      "Bash(pnpm --filter q8m-server lint)",
      "Bash(pnpm --filter q8m-server typecheck:*)",
      "Bash(pnpm dlx:*)",
      "Bash(pnpm --filter q8m-client build)",
      "Bash(pnpm --filter q8m-client test)",
      "Bash(pnpm --filter q8m-client test:unit)",
      "Bash(pnpm --filter q8m-server test src/tests/middlewares/planGuard.middleware.test.ts)",
      "Bash(pnpm --filter @q8m/shared test config/features.test.ts)",
      "Bash(pnpm --filter q8m-server build)",
      "Bash(pnpm list:*)",
      "Bash(pnpm husky:*)",
      "Bash(git rev-parse:*)",
      "Bash(git config:*)",
      "Bash(nvm --version)",
      "Bash(source:*)",
      "Read(//var/folders/3j/l54px0hn1c72m5bydzp8sqv80000gn/T/TemporaryItems/NSIRD_screencaptureui_vzJnkW/**)",
      "Read(//var/folders/3j/l54px0hn1c72m5bydzp8sqv80000gn/T/TemporaryItems/NSIRD_screencaptureui_tQhp3l/**)",
      "Read(//var/folders/3j/l54px0hn1c72m5bydzp8sqv80000gn/T/TemporaryItems/NSIRD_screencaptureui_TMqkaQ/**)",
      "Read(//var/folders/3j/l54px0hn1c72m5bydzp8sqv80000gn/T/TemporaryItems/NSIRD_screencaptureui_Yh1L0Y/**)",
      "Read(//var/folders/3j/l54px0hn1c72m5bydzp8sqv80000gn/T/TemporaryItems/NSIRD_screencaptureui_eBfWIU/**)",
      "Bash(tsx:*)",
      "Bash(pnpm tsx:*)",
      "Bash(pnpm db:seed:framework-access:*)",
      "Read(//var/folders/3j/l54px0hn1c72m5bydzp8sqv80000gn/T/TemporaryItems/NSIRD_screencaptureui_MthcMd/**)",
      "Bash(pnpm db:seed:rich-questions:*)",
      "Read(//var/folders/3j/l54px0hn1c72m5bydzp8sqv80000gn/T/TemporaryItems/NSIRD_screencaptureui_MmVNfK/**)",
      "Read(//var/folders/3j/l54px0hn1c72m5bydzp8sqv80000gn/T/TemporaryItems/NSIRD_screencaptureui_IkemJT/**)",
      "Read(//var/folders/3j/l54px0hn1c72m5bydzp8sqv80000gn/T/TemporaryItems/NSIRD_screencaptureui_WTI4Mb/**)",
      "Read(//var/folders/3j/l54px0hn1c72m5bydzp8sqv80000gn/T/TemporaryItems/NSIRD_screencaptureui_uoVtl5/**)",
      "Bash(pnpm db:seed:study-questions:*)",
      "Bash(pnpm tsc:*)",
      "Bash(pnpm --filter q8m-client add canvas-confetti)",
      "Bash(pnpm --filter q8m-client add:*)",
      "Read(///**)",
      "Bash(pnpm config:*)",
      "Bash(head:*)",
      "Bash(bash:*)",
      "Bash(git diff:*)",
      "Bash(git mv:*)",
      "Bash(do newname=\"$file%.service.ts.ts\")",
      "Bash(./scripts/refactor-stores.sh:*)",
      "Bash(./scripts/refactor-composables.sh:*)",
      "Bash(./scripts/refactor-server-services.sh:*)",
      "Bash(pnpm db:seed:learning-paths:*)",
      "Read(//var/folders/3j/l54px0hn1c72m5bydzp8sqv80000gn/T/TemporaryItems/NSIRD_screencaptureui_yLqHyL/**)",
      "Read(//var/folders/3j/l54px0hn1c72m5bydzp8sqv80000gn/T/TemporaryItems/NSIRD_screencaptureui_DsLvdC/**)",
      "Bash(pnpm --filter q8m-server test:*)",
      "Read(//var/folders/3j/l54px0hn1c72m5bydzp8sqv80000gn/T/TemporaryItems/NSIRD_screencaptureui_VUJz9p/**)",
      "Read(//var/folders/3j/l54px0hn1c72m5bydzp8sqv80000gn/T/TemporaryItems/NSIRD_screencaptureui_WB5pM2/**)",
      "Read(//var/folders/3j/l54px0hn1c72m5bydzp8sqv80000gn/T/TemporaryItems/NSIRD_screencaptureui_RcSoz8/**)",
      "Bash(npx vue-tsc --noEmit)",
      "Bash(npx vue-tsc --noEmit --project client/tsconfig.json)",
      "Bash(tee /tmp/vue-type-errors.txt)",
      "Bash(npm install marked highlight.js)",
      "Bash(npm install -D @types/marked)",
      "Read(//tmp/**)",
      "Bash(tee /tmp/vue-type-errors-new.txt)",
      "Bash(tee /tmp/vue-type-errors-final.txt)",
      "Bash(tee /tmp/vue-type-errors-progress1.txt)",
      "Bash(tee /tmp/vue-type-errors-progress2.txt)",
      "Bash(tee /tmp/vue-type-errors-progress3.txt)",
      "Bash(tee /tmp/type-check-initial.log)",
      "Bash(tee /tmp/type-check-progress.log)",
      "Bash(tee /tmp/type-check-output.txt)",
      "Bash(tee /tmp/type-check-path-errors.txt)",
      "Bash(tee /tmp/type-check-after-path-fixes.txt)",
      "Bash(tee /tmp/type-check-current.txt)",
      "Bash(__NEW_LINE__ for file in )",
      "Bash(\"/Users/htirawi/Desktop/Hussein/Projects/quiz-platform/client/src/features/discussions/components/ReplyForm.vue\" )",
      "Bash(\"/Users/htirawi/Desktop/Hussein/Projects/quiz-platform/client/src/features/home/components/FeaturesGrid.vue\" )",
      "Bash(\"/Users/htirawi/Desktop/Hussein/Projects/quiz-platform/client/src/features/home/components/HomeCredibility.vue\" )",
      "Bash(\"/Users/htirawi/Desktop/Hussein/Projects/quiz-platform/client/src/features/home/components/HomeHowItWorks.vue\" )",
      "Bash(\"/Users/htirawi/Desktop/Hussein/Projects/quiz-platform/client/src/features/home/components/TestimonialsSection.vue\")",
      "Bash(tee /tmp/type-check-continue.txt)",
      "Bash(tee /tmp/final-type-errors.txt)",
      "Bash(tee /tmp/final-7-errors.txt)",
      "Bash(tee /tmp/final-type-check.txt)"
    ],
    "deny": [],
    "ask": []
  }
}
