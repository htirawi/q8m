name: Quality Gates

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

jobs:
  quality-check:
    name: Quality Check
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-v9-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-v9-store-

      - name: Verify lockfile exists
        run: |
          if [ ! -f pnpm-lock.yaml ]; then
            echo "Error: pnpm-lock.yaml not found!"
            exit 1
          fi
          echo "âœ“ pnpm-lock.yaml found"
          head -5 pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint check
        run: pnpm lint

      - name: Type check
        run: pnpm typecheck

      - name: Format check
        run: pnpm format:check

      - name: Unit tests
        run: pnpm test:unit

      - name: Build project
        run: pnpm build

      - name: Quality Gates Summary
        if: always()
        run: |
          echo "âœ… Quality Gates Completed!"
          echo "ðŸ“Š Summary:"
          echo "  - Linting: âœ“"
          echo "  - Type Checking: âœ“"
          echo "  - Formatting: âœ“"
          echo "  - Unit Tests: âœ“"
          echo "  - Build: âœ“"

  security-check:
    name: Security Check
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-v9-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-v9-store-

      - name: Verify lockfile exists
        run: |
          if [ ! -f pnpm-lock.yaml ]; then
            echo "Error: pnpm-lock.yaml not found!"
            exit 1
          fi
          echo "âœ“ pnpm-lock.yaml found"
          head -5 pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run npm audit
        run: pnpm audit --audit-level=moderate || true

      - name: Security Check Summary
        run: |
          echo "ðŸ”’ Security checks completed!"
