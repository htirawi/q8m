# =============================================================================
# ⚠️  SECURITY NOTICE - THIS IS A TEMPLATE FILE
# =============================================================================
# This file contains EXAMPLE/PLACEHOLDER values ONLY - NOT real credentials
# Values like [REPLACE_USERNAME] are meant to be replaced with your actual
# credentials. This file is safe to commit to version control.
#
# NEVER commit the actual .env file with real credentials to version control!
# =============================================================================

# ===========================================
# Quiz 8 Mastery - Server Environment Config
# ===========================================

# Node Environment
NODE_ENV=development # development | production | test

# Server Configuration
HOST=0.0.0.0
PORT=3000
API_BASE_URL=http://localhost:3000

# Client Configuration
CLIENT_URL=http://localhost:5173

# Database Configuration
# MongoDB connection string
MONGODB_URI=mongodb://localhost:27017/quiz-platform
# Alternative: MONGODB_URI=mongodb+srv://[REPLACE_USERNAME]:[REPLACE_PASSWORD]@[REPLACE_CLUSTER].mongodb.net/quiz-platform?retryWrites=true&w=majority

# JWT Configuration
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
JWT_EXPIRES_IN=15m # Access token expiration
JWT_REFRESH_EXPIRES_IN=7d # Refresh token expiration

# Security Configuration
# CORS Origins (comma-separated list)
CORS_ORIGIN=http://localhost:5173,http://localhost:3000
CORS_CREDENTIALS=true

# Rate Limiting
RATE_LIMIT_TRUST_PROXY=false # Set to true if behind a proxy (nginx, cloudflare)
RATE_LIMIT_REDIS_URL= # Optional: redis://localhost:6379 for production

# File Upload
MAX_FILE_SIZE=10485760 # 10MB in bytes

# Email Configuration (for verification, password reset)
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_SECURE=false
EMAIL_USER=your-email@gmail.com
EMAIL_PASSWORD=your-app-specific-password
EMAIL_FROM=Quiz 8 Mastery <noreply@quiz8mastery.com>

# OAuth Configuration
# Google OAuth
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret
GOOGLE_CALLBACK_URL=http://localhost:3000/api/v1/auth/google/callback

# Payment Gateway Configuration
# PayPal
PAYPAL_CLIENT_ID=your-paypal-client-id
PAYPAL_CLIENT_SECRET=your-paypal-client-secret
PAYPAL_MODE=sandbox # sandbox | live
PAYPAL_WEBHOOK_ID=your-webhook-id # For webhook signature verification

# APS (Amazon Payment Services)
APS_ACCESS_CODE=your-aps-access-code
APS_MERCHANT_IDENTIFIER=your-aps-merchant-id
APS_REQUEST_PHRASE=your-aps-request-phrase
APS_RESPONSE_PHRASE=your-aps-response-phrase
APS_CURRENCY=SAR

# HyperPay
HYPERPAY_ENTITY_ID=your-hyperpay-entity-id
HYPERPAY_ACCESS_TOKEN=your-hyperpay-access-token
HYPERPAY_MODE=test # test | live

# Session Configuration
SESSION_SECRET=your-session-secret-change-this-in-production
SESSION_MAX_AGE=604800000 # 7 days in milliseconds

# Logging
LOG_LEVEL=info # error | warn | info | debug | trace

# Admin Configuration
ADMIN_EMAIL=admin@quiz8mastery.com
ADMIN_PASSWORD=change-this-secure-admin-password

# Monitoring & Analytics
SENTRY_DSN= # Optional: Your Sentry DSN for error tracking
GA_MEASUREMENT_ID= # Optional: Google Analytics ID

# Feature Flags
ENABLE_EMAIL_VERIFICATION=true
ENABLE_2FA=false
ENABLE_PAYPAL=true
ENABLE_APS=false
ENABLE_HYPERPAY=false

# Security Headers
CSP_REPORT_URI= # Optional: URI for CSP violation reports

# Database Backup
BACKUP_ENABLED=false
BACKUP_SCHEDULE=0 2 * * * # Daily at 2 AM
BACKUP_RETENTION_DAYS=30

# Testing
TEST_DATABASE_URI=mongodb://localhost:27017/quiz-platform-test

# ===========================================
# IMPORTANT SECURITY NOTES:
# ===========================================
# 1. Never commit this file with real values to version control
# 2. Use strong, unique passwords for JWT_SECRET and SESSION_SECRET
# 3. In production, set NODE_ENV=production
# 4. Use environment-specific secrets management (AWS Secrets Manager, etc.)
# 5. Enable HTTPS in production (handled by reverse proxy)
# 6. Set RATE_LIMIT_TRUST_PROXY=true if behind proxy
# 7. Use Redis for rate limiting in production
# 8. Keep all API keys and secrets confidential
