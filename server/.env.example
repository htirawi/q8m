# =============================================================================
# ⚠️  SECURITY NOTICE - THIS IS A TEMPLATE FILE
# =============================================================================
# This file contains EXAMPLE/PLACEHOLDER values ONLY - NOT real credentials
# Values like [REPLACE_WITH_USERNAME] are meant to be replaced with your actual
# credentials. This file is safe to commit to version control.
#
# NEVER commit the actual .env file with real credentials to version control!
# The .env file is gitignored for security reasons.
#
# To use this file:
# 1. Copy this file: cp .env.example .env
# 2. Replace ALL placeholder values with your actual credentials
# 3. Keep your .env file private and never share it
# =============================================================================

# =============================================================================
# Q8M SERVER ENVIRONMENT CONFIGURATION
# =============================================================================
# Copy this file to .env and configure with your actual values
# Used in: server/src/config/env.ts

# -----------------------------------------------------------------------------
# SERVER CONFIGURATION
# -----------------------------------------------------------------------------
# Application environment - Required
NODE_ENV=development
# Server port - Optional, default: 3000
PORT=3000
# Server host - Optional, default: 0.0.0.0
HOST=0.0.0.0

# -----------------------------------------------------------------------------
# DATABASE CONFIGURATION
# -----------------------------------------------------------------------------
# MongoDB connection string - Required
# Used in: server/src/config/database.ts
#
# For Local Development:
MONGODB_URI=mongodb://localhost:27017/q8m
#
# For MongoDB Atlas (Cloud) - Recommended for Production:
# 1. Create free cluster at https://www.mongodb.com/cloud/atlas/register
# 2. Get connection string from Atlas dashboard
# 3. Replace username, password, and cluster URL
# MONGODB_URI=mongodb+srv://[REPLACE_WITH_USERNAME]:[REPLACE_WITH_PASSWORD]@[REPLACE_WITH_CLUSTER].mongodb.net/q8m?retryWrites=true&w=majority
#
# Benefits of Atlas:
# - Automatic backups and scaling
# - Built-in security and monitoring
# - Free tier available (512MB storage)
# - Optimized connection pooling
#
# MongoDB database name - Required
MONGODB_DB_NAME=q8m
# Additional MongoDB options (JSON string) - Optional
MONGODB_OPTIONS=

# -----------------------------------------------------------------------------
# REDIS CONFIGURATION (Optional - for caching)
# -----------------------------------------------------------------------------
# Redis connection URL - Optional
REDIS_URL=redis://localhost:6379
# Redis password - Optional
REDIS_PASSWORD=
# Redis database number - Optional, default: 0
REDIS_DB=0

# -----------------------------------------------------------------------------
# JWT & SESSION CONFIGURATION
# -----------------------------------------------------------------------------
# JWT secret for access tokens - Required (min 32 chars)
# Used in: server/src/services/jwt.service.ts
JWT_SECRET=your-super-secure-jwt-secret-key-minimum-32-characters-long
# JWT refresh token secret - Required (min 32 chars)
JWT_REFRESH_SECRET=your-super-secure-refresh-secret-key-minimum-32-characters-long
# Access token expiry - Optional, default: 15m
JWT_EXPIRES_IN=15m
# Refresh token expiry - Optional, default: 7d
JWT_REFRESH_EXPIRES_IN=7d

# -----------------------------------------------------------------------------
# OAUTH CONFIGURATION
# -----------------------------------------------------------------------------
# Google OAuth - Required for Google login
# Used in: server/src/routes/auth.ts
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret
# Google redirect URI - Optional (auto-generated if not provided)
GOOGLE_REDIRECT_URI=http://localhost:3000/api/v1/auth/google/callback

# -----------------------------------------------------------------------------
# EMAIL CONFIGURATION
# -----------------------------------------------------------------------------
# SMTP settings for transactional emails - Required
# Used in: server/src/services/email.service.ts
#
# For Development (Dummy Credentials - Emails will be logged):
# Set SMTP_USER to 'dummy@example.com' to enable email logging mode
# View logged emails at: http://localhost:3000/api/dev/emails
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=dummy@example.com
SMTP_PASS=dummy-password
#
# For Production - Recommended Email Services:
#
# 1. Gmail (with App Password):
#    - Generate App Password: https://support.google.com/accounts/answer/185833
#    SMTP_HOST=smtp.gmail.com
#    SMTP_PORT=587
#    SMTP_USER=your-email@gmail.com
#    SMTP_PASS=your-16-char-app-password
#
# 2. SendGrid (Recommended for production):
#    - Free tier: 100 emails/day
#    - Sign up: https://sendgrid.com
#    SMTP_HOST=smtp.sendgrid.net
#    SMTP_PORT=587
#    SMTP_USER=apikey
#    SMTP_PASS=your-sendgrid-api-key
#
# 3. AWS SES (Cost-effective for high volume):
#    - Setup: https://aws.amazon.com/ses/
#    SMTP_HOST=email-smtp.us-east-1.amazonaws.com
#    SMTP_PORT=587
#    SMTP_USER=your-ses-smtp-username
#    SMTP_PASS=your-ses-smtp-password
#
# 4. Mailgun (Developer-friendly):
#    - Free tier: 5,000 emails/month
#    - Sign up: https://www.mailgun.com
#    SMTP_HOST=smtp.mailgun.org
#    SMTP_PORT=587
#    SMTP_USER=your-mailgun-smtp-username
#    SMTP_PASS=your-mailgun-smtp-password
#
# From email address - Required
EMAIL_FROM=noreply@q8m.com
# From name - Optional, default: Quiz Platform
EMAIL_FROM_NAME=Q8M Quiz Platform

# -----------------------------------------------------------------------------
# PAYMENT GATEWAY CONFIGURATION
# -----------------------------------------------------------------------------
# PayPal Configuration (Orders v2 API)
# Used in: server/src/lib/paypalClient.ts, server/src/controllers/paypal.controller.ts
#
# Environment - Required (sandbox for development, live for production)
PAYPAL_ENV=sandbox
# Client ID - Required (from PayPal Dashboard → Apps & Credentials)
PAYPAL_CLIENT_ID=your-paypal-client-id
# Client Secret - Required (from PayPal Dashboard → Apps & Credentials)
PAYPAL_CLIENT_SECRET=your-paypal-client-secret
#
# Webhook ID - REQUIRED for webhook verification (SEC-001)
# CRITICAL: Used to verify PayPal webhook signatures and prevent fraud
#
# How to obtain:
# 1. Go to PayPal Dashboard → Developers → Webhooks
#    Sandbox: https://developer.paypal.com/dashboard/webhooks
#    Production: https://www.paypal.com/businessmanage/account/webhooks
#
# 2. Create a webhook with URL: https://your-domain.com/api/payments/paypal/webhook
#
# 3. Subscribe to these events (minimum required):
#    - CHECKOUT.ORDER.APPROVED
#    - PAYMENT.CAPTURE.COMPLETED
#    - PAYMENT.CAPTURE.REFUNDED
#
# 4. Copy the Webhook ID from the webhook details page
#
# For Development (use dummy ID, webhooks won't be verified):
PAYPAL_WEBHOOK_ID=dummy-webhook-id-for-dev
#
# For Production (use real webhook ID from PayPal dashboard):
# PAYPAL_WEBHOOK_ID=8WR55467BL123456M
#
# IMPORTANT: Use different webhook IDs for sandbox and production environments
# Sandbox webhook URL: https://your-dev-domain.com/api/payments/paypal/webhook
# Production webhook URL: https://your-domain.com/api/payments/paypal/webhook

# APS (Amazon Payment Services) Configuration - Optional
# Used in: server/src/services/aps.service.ts
APS_API_KEY=your-aps-api-key
APS_MERCHANT_ID=your-aps-merchant-id
APS_WEBHOOK_SECRET=your-aps-webhook-secret

# HyperPay Configuration - Optional (fallback payment gateway)
# Used in: server/src/services/hyperpay.service.ts
HYPERPAY_API_KEY=your-hyperpay-api-key
HYPERPAY_MERCHANT_ID=your-hyperpay-merchant-id
HYPERPAY_WEBHOOK_SECRET=your-hyperpay-webhook-secret

# -----------------------------------------------------------------------------
# CURRENCY EXCHANGE API
# -----------------------------------------------------------------------------
# Exchange rate API key - Optional (for currency conversion)
# Used in: server/src/services/currency.service.ts
EXCHANGE_RATE_API_KEY=your-exchange-rate-api-key
# FX cache TTL in milliseconds - Optional, default: 86400000 (24 hours)
FX_CACHE_TTL=86400000

# -----------------------------------------------------------------------------
# SECURITY CONFIGURATION
# -----------------------------------------------------------------------------
# Bcrypt rounds for password hashing - Optional, default: 12
BCRYPT_ROUNDS=12
# Rate limiting window in milliseconds - Optional, default: 900000 (15 min)
RATE_LIMIT_WINDOW_MS=900000
# Max requests per window - Optional, default: 100
RATE_LIMIT_MAX_REQUESTS=100
# CSRF secret for token generation - Required (min 32 chars)
# Used in: server/src/middlewares/csrf.middleware.ts
CSRF_SECRET=your-csrf-secret-key-minimum-32-characters-long
# Signed URL secret - Optional (min 32 chars)
# Used in: server/src/services/signed-url.service.ts
SIGNED_URL_SECRET=your-signed-url-secret-key-minimum-32-characters-long
# HMAC Rate Limiting Secret - Required (min 32 chars)
# Used for secure rate limiting with HMAC verification
# Generate with: openssl rand -hex 32
HMAC_RATE_KEY_SECRET=your-hmac-rate-key-secret-minimum-32-characters-long

# -----------------------------------------------------------------------------
# CORS CONFIGURATION
# -----------------------------------------------------------------------------
# Allowed origins (comma-separated) - Required in production
# Used in: server/src/app.ts
CORS_ORIGIN=http://localhost:5173,http://localhost:3000
# Allow credentials - Optional, default: true
CORS_CREDENTIALS=true

# -----------------------------------------------------------------------------
# MONITORING & LOGGING
# -----------------------------------------------------------------------------
# Sentry DSN for error tracking - Optional
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id
# Log level - Optional, default: info
LOG_LEVEL=info
# Log format - Optional, default: combined
LOG_FORMAT=combined

# -----------------------------------------------------------------------------
# FILE UPLOAD CONFIGURATION
# -----------------------------------------------------------------------------
# Max file size in bytes - Optional, default: 10485760 (10MB)
MAX_FILE_SIZE=10485760
# Upload directory path - Optional, default: ./uploads
UPLOAD_PATH=./uploads
# Allowed file types - Optional
ALLOWED_FILE_TYPES=image/jpeg,image/png,image/gif,application/pdf

# -----------------------------------------------------------------------------
# CACHE CONFIGURATION
# -----------------------------------------------------------------------------
# Cache TTL in seconds - Optional, default: 3600 (1 hour)
CACHE_TTL=3600
# Max cache items - Optional, default: 1000
CACHE_MAX_ITEMS=1000

# -----------------------------------------------------------------------------
# ADMIN CONFIGURATION
# -----------------------------------------------------------------------------
# Admin email for system administration - Required
ADMIN_EMAIL=admin@q8m.com
# Admin password - Required (min 8 chars)
ADMIN_PASSWORD=SecureAdminPassword123!

# -----------------------------------------------------------------------------
# WEBHOOK CONFIGURATION
# -----------------------------------------------------------------------------
# Webhook secret for payment verification - Required (min 32 chars)
WEBHOOK_SECRET=your-webhook-secret-key-minimum-32-characters-long
# Webhook timeout in milliseconds - Optional, default: 30000 (30 sec)
WEBHOOK_TIMEOUT=30000

# -----------------------------------------------------------------------------
# DEVELOPMENT SECURITY (Only for development environment)
# -----------------------------------------------------------------------------
# Dev login secret - Required for dev-login endpoint (min 32 chars)
# CRITICAL: Only set this in development environment, NEVER in production
# Generate with: openssl rand -hex 32
DEV_LOGIN_SECRET=
# Dev login whitelist - Comma-separated list of allowed emails
# Example: DEV_LOGIN_WHITELIST=dev@example.com,test@example.com
DEV_LOGIN_WHITELIST=

# -----------------------------------------------------------------------------
# FEATURE FLAGS
# -----------------------------------------------------------------------------
# Enable user registration - Optional, default: true
ENABLE_REGISTRATION=true
# Enable OAuth login - Optional, default: true
ENABLE_OAUTH=true
# Enable payment processing - Optional, default: true
ENABLE_PAYMENTS=true
# Enable analytics - Optional, default: true
ENABLE_ANALYTICS=true
# Enable debug mode - Optional, default: false
ENABLE_DEBUG_MODE=false

# -----------------------------------------------------------------------------
# FIREBASE CONFIGURATION (for Push Notifications)
# -----------------------------------------------------------------------------
# Firebase Admin SDK Configuration - Required for push notifications
# Used in: server/src/services/notification.service.ts
#
# How to obtain:
# 1. Go to Firebase Console: https://console.firebase.google.com/
# 2. Select your project → Project Settings → Service Accounts
# 3. Click "Generate New Private Key" button
# 4. Save the JSON file securely
# 5. Use either:
#    a) Path to service account JSON file (RECOMMENDED for development)
#    b) Base64 encoded JSON content (RECOMMENDED for production)
#
# Option A: Path to service account JSON file (for development)
FIREBASE_SERVICE_ACCOUNT_PATH=./config/firebase-service-account.json
#
# Option B: Base64 encoded JSON content (for production/deployment)
# To encode: cat service-account.json | base64
# FIREBASE_SERVICE_ACCOUNT_BASE64=ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3Vu...
#
# Firebase Project ID - Required
FIREBASE_PROJECT_ID=your-firebase-project-id
# Firebase Database URL - Optional (if using Realtime Database)
FIREBASE_DATABASE_URL=https://your-project.firebaseio.com

# -----------------------------------------------------------------------------
# API CONFIGURATION
# -----------------------------------------------------------------------------
# API base URL - Required (server's base URL without /api suffix)
API_BASE_URL=http://localhost:3000
# Client URL - Required
CLIENT_URL=http://localhost:5173
# Server URL - Required
SERVER_URL=http://localhost:3000
