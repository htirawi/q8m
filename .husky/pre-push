#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "🚀 Running pre-push validation..."

# Lint modified client source files (exclude deleted, config, test, style files)
MODIFIED_CLIENT_FILES=$(git diff --name-only --diff-filter=ACMR HEAD | grep "^client/src/.*\.\(ts\|vue\)$" | grep -v "\.test\.ts$" | grep -v "\.spec\.ts$" | grep -v "\.css$" | sed 's|^client/||' || true)
if [ -n "$MODIFIED_CLIENT_FILES" ]; then
  echo "📝 Linting modified client files..."
  cd client
  echo "$MODIFIED_CLIENT_FILES" | tr '\n' ' ' | xargs pnpm eslint --max-warnings 0 || {
    echo "❌ Client linting failed. Please fix the errors above."
    exit 1
  }
  cd ..
else
  echo "ℹ️  No client files to lint"
fi

# Lint modified server source files (exclude deleted files and tests)
MODIFIED_SERVER_FILES=$(git diff --name-only --diff-filter=ACMR HEAD | grep "^server/src/.*\.\(ts\)$" | grep -v "\.test\.ts$" | grep -v "\.spec\.ts$" | sed 's|^server/||' || true)
if [ -n "$MODIFIED_SERVER_FILES" ]; then
  echo "📝 Linting modified server files..."
  cd server
  echo "$MODIFIED_SERVER_FILES" | tr '\n' ' ' | xargs pnpm eslint --max-warnings 0 || {
    echo "❌ Server linting failed. Please fix the errors above."
    exit 1
  }
  cd ..
else
  echo "ℹ️  No server files to lint"
fi

# Run format check
echo "💅 Checking code formatting..."
pnpm format:check || {
  echo "❌ Code formatting check failed. Run 'pnpm format' to fix."
  exit 1
}

# Run typecheck on all code
echo "🔍 Running typecheck..."
pnpm typecheck || {
  echo "❌ Type check failed. Please fix the type errors above."
  exit 1
}

# Run unit tests
echo "🧪 Running tests..."
pnpm test:unit || {
  echo "❌ Tests failed. Please fix the failing tests above."
  exit 1
}

# Build the project (this will run vue-tsc again + vite build)
echo "🔨 Building project..."
pnpm build || {
  echo "❌ Build failed. Please fix the build errors above."
  echo "💡 Tip: Run 'pnpm build' locally to catch build errors before pushing."
  exit 1
}

echo "✅ Pre-push validation passed! All checks completed successfully."